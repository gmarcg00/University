#include <LiquidCrystal.h> // includes the LiquidCrystal Library
#include <Servo.h>

LiquidCrystal lcd(7, 6, 5, 22, 24, 26); // Creates an LC object. Parameters: (rs, enable, d4, d5, d6, d7)
Servo servo1, servo2, servo3, servo4;   // DS04-NFC motors

#define coinDetector 9

#define button1 11
#define button2 10
#define button3 8
#define button4 12

int buttonPressed;

void setup() {
  lcd.begin(16, 2); // Initializes the interface to the LCD screen, and specifies the dimensions (width and height) of the display

  servo1.attach(47);
  servo2.attach(49);
  servo3.attach(51);
  servo4.attach(53);

  //pinMode(dirPinVertical, OUTPUT);
  //pinMode(stepPinVertical, OUTPUT);
  //pinMode(dirPinHorizontal, OUTPUT);
  //pinMode(stepPinHorizontal, OUTPUT);

  pinMode(coinDetector, INPUT);

  // Activating the digital pins pull up resistors
  pinMode(button1, INPUT_PULLUP);
  pinMode(button2, INPUT_PULLUP);
  pinMode(button3, INPUT_PULLUP);
  pinMode(button4, INPUT_PULLUP);

}
void loop() {
  Serial.println("Empezamos");
  // Print "Insert a coin!" on the LCD
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Introduzca una");
  lcd.setCursor(0, 1);
  lcd.print("moneda");
  
  // Wait until a coin is detected
  while (true) {
    if (digitalRead(coinDetector) == LOW) { // If a coin is detected, exit the from the while loop
      break;
    }
  }
  Serial.print("Moneda Introducida");
  
  lcd.clear();
  lcd.print("Pulse boton");
 
  // Wait until a button is pressed
  while (true) {
    if (digitalRead(button1) == LOW) {
      buttonPressed = 1;
      Serial.print("Boton 1 pulsado");
      break;
    }
    if (digitalRead(button2) == LOW) {
      buttonPressed = 2;
      break;
    }
    if (digitalRead(button3) == LOW) {
      buttonPressed = 3;
      break;
    }
    if (digitalRead(button4) == LOW) {
      buttonPressed = 4;
      break;
    }
  }
  
  // Print "Delivering..." 
  lcd.clear();
  lcd.setCursor(0, 0);
  lcd.print("Girando ...");
  
  // Depending on the pressed button, move the carrier to that position and discharge the selected item 
  switch (buttonPressed) {
    case 1:
      // Move the container to location 3
      //moveUp(2200); 
      delay(200);
      //moveLeft(1700);
      delay(300);
      // Rotate the helix, push the selected item
      servo1.writeMicroseconds(-2500); // rotate
      delay(500);
      servo1.writeMicroseconds(1500);  // stop
      //delay(500);
      //servo3.writeMicroseconds(-2500);
      //delay(950);
      //servo3.writeMicroseconds(1500);  // stop
      // Move the container back to starting position
      //moveRight(1700);
      delay(200);
      //moveDown(2200);
      break;
      
     case 2:
      // Move the container to location 3
      //moveUp(2200); 
      delay(200);
      //moveLeft(1700);
      delay(300);
      // Rotate the helix, push the selected item
      servo2.writeMicroseconds(-2500); // rotate
      delay(2000);
      servo2.writeMicroseconds(1500);  // stop
      delay(200);
      //moveDown(2200);
      break;

      case 3:
      // Move the container to location 3
      //moveUp(2200); 
      delay(200);
      //moveLeft(1700);
      delay(300);
      // Rotate the helix, push the selected item
      servo3.writeMicroseconds(-2500); // rotate
      delay(2000);
      servo3.writeMicroseconds(1500);  // stop
      delay(200);
      //moveDown(2200);
      break;

      case 4:
      // Move the container to location 3
      //moveUp(2200); 
      delay(200);
      //moveLeft(1700);
      delay(300);
      // Rotate the helix, push the selected item
      servo4.writeMicroseconds(-2500); // rotate
      delay(2000);
      servo4.writeMicroseconds(1500);  // stop
      delay(200);
      break;
  }
  
  lcd.clear(); // Clears the display
  lcd.setCursor(0, 0);
  lcd.print("Recoja su producto!"); // Prints on the LCD
  delay(2000);
}



